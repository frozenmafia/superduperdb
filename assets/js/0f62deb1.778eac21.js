"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[4546],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),p=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(d.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=p(n),m=a,k=s["".concat(d,".").concat(m)]||s[m]||u[m]||i;return n?r.createElement(k,o(o({ref:t},c),{},{components:n})):r.createElement(k,o({ref:t},c))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[s]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},75906:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={sidebar_position:20},o="Procedural vs. declarative API",l={unversionedId:"docs/procedural_vs_declarative_api",id:"docs/procedural_vs_declarative_api",title:"Procedural vs. declarative API",description:"superduperdb provides 2 principle approaches for applying AI to the database",source:"@site/content/docs/20_procedural_vs_declarative_api.md",sourceDirName:"docs",slug:"/docs/procedural_vs_declarative_api",permalink:"/docs/docs/procedural_vs_declarative_api",draft:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/tree/main/docs/content/docs/20_procedural_vs_declarative_api.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"Using AI APIs as Predictor descendants",permalink:"/docs/docs/ai_apis"},next:{title:"Applying models and predictors to data",permalink:"/docs/docs/apply_models"}},d={},p=[{value:"Procedural API",id:"procedural-api",level:3},{value:"Declarative API",id:"declarative-api",level:3}],c={toc:p},s="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(s,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"procedural-vs-declarative-api"},"Procedural vs. declarative API"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"superduperdb")," provides 2 principle approaches for applying AI to the database"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Method"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Example"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Procedural"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("em",{parentName:"td"},"Telling SuperDuperDB ",(0,a.kt)("strong",{parentName:"em"},"what")," to do")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"model.predict(X='txt', db=db)"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Declarative"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("em",{parentName:"td"},"Telling SuperDuperDB which ",(0,a.kt)("strong",{parentName:"em"},"state")," it should be in")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"db.add(Listener(model=model, key='txt', select=c.find()))"))))),(0,a.kt)("h3",{id:"procedural-api"},"Procedural API"),(0,a.kt)("p",null,"The procedural API is better suited for experimentation, and will be more familiar to\ndata-scientists, where the procedural API is inspired by the API of well known\nPyData packages, such as ",(0,a.kt)("inlineCode",{parentName:"p"},"sklearn"),". "),(0,a.kt)("p",null,"In particular, much functionality is covered by:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Model.predict")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Model.fit"))),(0,a.kt)("h3",{id:"declarative-api"},"Declarative API"),(0,a.kt)("p",null,"The declarative API is designed for production use-cases, and more sophisticated workflows.\nIt is better suited for linking dependencies between components, and allows users\nto build stacks of functionality, with unlimited complexity. The declarative API\nwill be more familiar to developers with an engineering or infrastructure background."),(0,a.kt)("p",null,"With the declarative API, developers work with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"db.add(<component-to-be-added>)\n")),(0,a.kt)("p",null,"The operand of this function call is always an instance of a descendant of ",(0,a.kt)("inlineCode",{parentName:"p"},"Component"),", but may also\ncontain itself many other ",(0,a.kt)("inlineCode",{parentName:"p"},"Component")," descendant instances."),(0,a.kt)("p",null,"For instance, creating a ",(0,a.kt)("inlineCode",{parentName:"p"},"VectorIndex")," involves also\ncreating a ",(0,a.kt)("inlineCode",{parentName:"p"},"Listener")," and a ",(0,a.kt)("inlineCode",{parentName:"p"},"Model")," inline."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"db.add(\n    VectorIndex(\n        'my-index'\n        indexing_listener=Listener(\n            model=model,\n            key='txt',\n            select=my_collection.find(),\n        ),\n    )\n)\n")),(0,a.kt)("p",null,"Read more about the ",(0,a.kt)("inlineCode",{parentName:"p"},"VectorIndex")," concept ",(0,a.kt)("a",{parentName:"p",href:"/docs/docs/vector_search"},"here"),"."))}u.isMDXComponent=!0}}]);