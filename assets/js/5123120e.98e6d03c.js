"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[1704],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),u=o,h=d["".concat(s,".").concat(u)]||d[u]||m[u]||i;return n?a.createElement(h,r(r({ref:t},p),{},{components:n})):a.createElement(h,r({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:o,r[1]=c;for(var l=2;l<i;l++)r[l]=n[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},14942:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var a=n(87462),o=(n(67294),n(3905));const i={sidebar_position:9},r="The component abstraction",c={unversionedId:"docs/component_abstraction",id:"docs/component_abstraction",title:"The component abstraction",description:"A Component is an object which is a combination of JSON-able parameters, and classes which are not",source:"@site/content/docs/09_component_abstraction.md",sourceDirName:"docs",slug:"/docs/component_abstraction",permalink:"/docs/docs/component_abstraction",draft:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/tree/main/docs/content/docs/09_component_abstraction.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Datalayer functionality",permalink:"/docs/docs/datalayer_functionality"},next:{title:"Document/ Encoder / Schema - superduperdb's mechanisms for specialized data.",permalink:"/docs/docs/document_encoder_abstraction"}},s={},l=[{value:"Types of component",id:"types-of-component",level:2},{value:"<code>Encoder</code>",id:"encoder",level:3},{value:"<code>Model</code>",id:"model",level:3},{value:"<code>Listener</code>",id:"listener",level:3},{value:"<code>VectorIndex</code>",id:"vectorindex",level:3},{value:"<code>Serializer</code>",id:"serializer",level:3},{value:"<code>Schema</code>",id:"schema",level:3},{value:"<code>Dataset</code>",id:"dataset",level:3},{value:"<code>Metric</code>",id:"metric",level:3},{value:"<code>Stack</code>",id:"stack",level:3},{value:"Activating components",id:"activating-components",level:2}],p={toc:l},d="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"the-component-abstraction"},"The component abstraction"),(0,o.kt)("p",null,"A ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"Component"))," is an object which is a combination of ",(0,o.kt)("inlineCode",{parentName:"p"},"JSON"),"-able parameters, and classes which are not\nserializable by ",(0,o.kt)("inlineCode",{parentName:"p"},"JSON"),", but are saved as ",(0,o.kt)("inlineCode",{parentName:"p"},"bytes"),"-blobs."),(0,o.kt)("h2",{id:"types-of-component"},"Types of component"),(0,o.kt)("p",null,"There are several key classes of objects in ",(0,o.kt)("inlineCode",{parentName:"p"},"superduperdb")," all of which inherit from ",(0,o.kt)("inlineCode",{parentName:"p"},"Component"),".\nAll of these objects are to be found in ",(0,o.kt)("inlineCode",{parentName:"p"},"superduperdb.component.*")),(0,o.kt)("p",null,"These are:"),(0,o.kt)("h3",{id:"encoder"},(0,o.kt)("inlineCode",{parentName:"h3"},"Encoder")),(0,o.kt)("p",null,"An ",(0,o.kt)("inlineCode",{parentName:"p"},"Encoder")," is a class which is responsible for converting special data-types in ",(0,o.kt)("inlineCode",{parentName:"p"},"bytes")," and back."),(0,o.kt)("h3",{id:"model"},(0,o.kt)("inlineCode",{parentName:"h3"},"Model")),(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"Model")," is a class which wraps a classical AI-model, but in-addition, brings additional tooling, such as the functions required\nfor pre- and post-processing, as well as which ",(0,o.kt)("inlineCode",{parentName:"p"},"Encoder")," is needed to encode outputs."),(0,o.kt)("h3",{id:"listener"},(0,o.kt)("inlineCode",{parentName:"h3"},"Listener")),(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"Listener"),' is a class which "deploys" a ',(0,o.kt)("inlineCode",{parentName:"p"},"Model"),' to "listen" for incoming data, and calculate predictions on this data, which\nare saved back to the database.'),(0,o.kt)("h3",{id:"vectorindex"},(0,o.kt)("inlineCode",{parentName:"h3"},"VectorIndex")),(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"VectorIndex")," is, informally, the necessary combination of ",(0,o.kt)("inlineCode",{parentName:"p"},"Component")," instances, to create ",(0,o.kt)("strong",{parentName:"p"},"vector-search")," functionality, end-2-end.\nFormally, a ",(0,o.kt)("inlineCode",{parentName:"p"},"VectorIndex")," is a combination of one or more ",(0,o.kt)("inlineCode",{parentName:"p"},"Listener")," instances which have the additional property that one of them has\nvector outputs. The ",(0,o.kt)("inlineCode",{parentName:"p"},"Model")," instances are used to create vectors for incoming queries, on the fly, as well as preparing incoming data, and\nsaving vectors for this data in the database."),(0,o.kt)("h3",{id:"serializer"},(0,o.kt)("inlineCode",{parentName:"h3"},"Serializer")),(0,o.kt)("p",null,"Some ",(0,o.kt)("inlineCode",{parentName:"p"},"Component")," objects require special serialization protocols, in order to become saveable in the ",(0,o.kt)("inlineCode",{parentName:"p"},"superduperdb")," world.\n",(0,o.kt)("inlineCode",{parentName:"p"},"Serializer"),' is a "meta"-component which can save these custom serialization protocols for use by other ',(0,o.kt)("inlineCode",{parentName:"p"},"Component")," instances."),(0,o.kt)("h3",{id:"schema"},(0,o.kt)("inlineCode",{parentName:"h3"},"Schema")),(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"Schema")," connects traditional datatypes and ",(0,o.kt)("inlineCode",{parentName:"p"},"Encoder")," instances, with tabular data."),(0,o.kt)("h3",{id:"dataset"},(0,o.kt)("inlineCode",{parentName:"h3"},"Dataset")),(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"Dataset")," is an immutable snapshot of the database. This immutability is important for model validation, and reproducibility,\namong other tasks."),(0,o.kt)("h3",{id:"metric"},(0,o.kt)("inlineCode",{parentName:"h3"},"Metric")),(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"Metric")," serves the purpose of evaluating the quality of ",(0,o.kt)("inlineCode",{parentName:"p"},"Component")," instances - in particular, ",(0,o.kt)("inlineCode",{parentName:"p"},"Model"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Listener")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"VectorIndex"),"\ninstances."),(0,o.kt)("h3",{id:"stack"},(0,o.kt)("inlineCode",{parentName:"h3"},"Stack")),(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"Stack")," is a way of connecting diverse and interoperating sets of functionality. See ",(0,o.kt)("a",{parentName:"p",href:"/docs/docs/creating_stacks_of_functionality"},"here")," for more details."),(0,o.kt)("h2",{id:"activating-components"},"Activating components"),(0,o.kt)("p",null,"Each of the components may be registered to work with ",(0,o.kt)("inlineCode",{parentName:"p"},"superduperdb")," by passing a component instance to ",(0,o.kt)("inlineCode",{parentName:"p"},"db.add"),"."))}m.isMDXComponent=!0}}]);