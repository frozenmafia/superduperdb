"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[9378],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,g=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},69744:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:13},i="SQL Query API",l={unversionedId:"docs/sql_query_API",id:"docs/sql_query_API",title:"SQL Query API",description:"Setup",source:"@site/content/docs/13_sql_query_API.md",sourceDirName:"docs",slug:"/docs/sql_query_API",permalink:"/docs/docs/sql_query_API",draft:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/tree/main/docs/content/docs/13_sql_query_API.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"MongoDB Query API",permalink:"/docs/docs/mongodb_query_API"},next:{title:"Encoding images, audio, video and other special data",permalink:"/docs/docs/encoding_special_data_types"}},p={},s=[{value:"Setup",id:"setup",level:2},{value:"Inserting data",id:"inserting-data",level:2},{value:"Selecting data",id:"selecting-data",level:2},{value:"Vector-search",id:"vector-search",level:3},{value:"Coming soon: support for raw-sql",id:"coming-soon-support-for-raw-sql",level:3},{value:"Updating data",id:"updating-data",level:2},{value:"Deleting data",id:"deleting-data",level:2}],c={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sql-query-api"},"SQL Query API"),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("p",null,"The first step in working with an SQL table, is to define a table and schema"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from superduperdb.backends.ibis import dtype, Table\nfrom superduperdb import Encoder, Schema\n\nmy_enc = Encoder('my-enc')\n\nschema = Schema('my-schema', fields={'img': my_enc, 'text': dtype('str'), 'rating': dtype('int')})\n\ndb = superduper()\n\nt = Table('my-table', schema=schema)\n\ndb.add(t)\n")),(0,a.kt)("h2",{id:"inserting-data"},"Inserting data"),(0,a.kt)("p",null,"Table data must correspond to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Schema")," for that table:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import pandas\n\npandas.DataFrame([\n    PIL.Image.open('image.jpg'), 'some text', 4,\n    PIL.Image.open('other_image.jpg'), 'some other text', 3,\n])\n\nt.insert(dataframe)\n")),(0,a.kt)("h2",{id:"selecting-data"},"Selecting data"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"superduperdb")," supports selecting data via the ",(0,a.kt)("inlineCode",{parentName:"p"},"ibis")," query API."),(0,a.kt)("p",null,"The following are equivalent:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"db.execute(\n    t.filter(t.rating > 3).limit(5).select(t.image)\n)\n")),(0,a.kt)("h3",{id:"vector-search"},"Vector-search"),(0,a.kt)("p",null,"Vector-searches are supported via the ",(0,a.kt)("inlineCode",{parentName:"p"},"like")," operator:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"db.execute(\n    t.like({'text': 'something like this'}, vector_index='my-index')\n     .filter(t.rating > 3)\n     .limit(5)\n     .select(t.image, t.id)\n)\n")),(0,a.kt)("p",null,"Vector-searches are either first or last in a chain of operations:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"db.execute(\n    t.filter(t.rating > 3)\n     .limit(5)\n     .select(t.image, t.id)\n     .like({'text': 'something like this'}, vector_index='my-index')\n)\n")),(0,a.kt)("h3",{id:"coming-soon-support-for-raw-sql"},"Coming soon: support for raw-sql"),(0,a.kt)("p",null,"... the first query above will be equivalent to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"db.execute(\n    'SELECT img FROM my-table WHERE rating > 3 LIMIT 5;'\n)\n")),(0,a.kt)("p",null,"... the second will be equivalent to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"db.execute(\n    '''\n    SELECT img FROM my-table \n    LIKE text = 'something like this'\n    WHERE rating > 3\n    LIMIT 5;\n    '''\n)\n")),(0,a.kt)("h2",{id:"updating-data"},"Updating data"),(0,a.kt)("p",null,"Updates are not covered for ",(0,a.kt)("inlineCode",{parentName:"p"},"superduperdb")," SQL integrations."),(0,a.kt)("h2",{id:"deleting-data"},"Deleting data"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"db.databackend.drop_table('my-table')\n")))}u.isMDXComponent=!0}}]);