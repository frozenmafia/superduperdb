"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[5107],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>y});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(r),m=o,y=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(y,i(i({ref:t},c),{},{components:r})):n.createElement(y,i({ref:t},c))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:o,i[1]=p;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},39055:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>l});var n=r(87462),o=(r(67294),r(3905));const a={sidebar_position:11},i="Query API syntax and approach",p={unversionedId:"docs/supported_query_APIs",id:"docs/supported_query_APIs",title:"Query API syntax and approach",description:"In order to specify the action of models on the data, we provide an interface to pythonic ecosystem query APIs.",source:"@site/content/docs/11_supported_query_APIs.md",sourceDirName:"docs",slug:"/docs/supported_query_APIs",permalink:"/docs/docs/supported_query_APIs",draft:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/tree/main/docs/content/docs/11_supported_query_APIs.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Document/ Encoder / Schema - superduperdb's mechanisms for specialized data.",permalink:"/docs/docs/document_encoder_abstraction"},next:{title:"MongoDB Query API",permalink:"/docs/docs/mongodb_query_API"}},s={},l=[{value:"Hybrid API",id:"hybrid-api",level:2}],c={toc:l},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"query-api-syntax-and-approach"},"Query API syntax and approach"),(0,o.kt)("p",null,"In order to specify the action of models on the data, we provide an interface to pythonic ecosystem query APIs.\nIn particular, we provide wrappers to these projects to create database queries:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://pymongo.readthedocs.io/en/stable/"},(0,o.kt)("inlineCode",{parentName:"a"},"pymongo"))," for MongoDB"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://ibis-project.org/"},(0,o.kt)("inlineCode",{parentName:"a"},"ibis"))," for SQL databases")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"ibis")," also allows users to use raw SQL in their workflows."),(0,o.kt)("p",null,"Queries in these two-worlds can be built by importing the table/collection class from\neach data backend. With ",(0,o.kt)("inlineCode",{parentName:"p"},"pymongo"),", one can write:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from superduperdb.backends.mongodb import Collection\n\nproducts = Collection('products')\n\nquery = products.find({'brand': 'Nike'}, {'_id': 1}).limit(10)\n")),(0,o.kt)("p",null,"In ",(0,o.kt)("inlineCode",{parentName:"p"},"ibis"),", one would write:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from superduperdb.backends.ibis import Table\n\nproducts = Table('products')\n\nquery = products.filter(products.brand == 'Nike').select('id').limit(10)\n")),(0,o.kt)("h2",{id:"hybrid-api"},"Hybrid API"),(0,o.kt)("p",null,"On top of the native features of ",(0,o.kt)("inlineCode",{parentName:"p"},"pymongo")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"ibis"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"superduperdb")," builds several novel features:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Additional ways to query the database with the outputs of machine learning models",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Query model-outputs directly"),(0,o.kt)("li",{parentName:"ul"},"Vector-search"))),(0,o.kt)("li",{parentName:"ul"},"Ways to encode and query more sophisticated data-types using the ",(0,o.kt)("inlineCode",{parentName:"li"},"Document"),"-",(0,o.kt)("inlineCode",{parentName:"li"},"Encoder")," pattern.")))}d.isMDXComponent=!0}}]);