"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[9872],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>k});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),p=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(a),m=n,k=c["".concat(i,".").concat(m)]||c[m]||u[m]||o;return a?r.createElement(k,s(s({ref:t},d),{},{components:a})):r.createElement(k,s({ref:t},d))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[c]="string"==typeof e?e:n,s[1]=l;for(var p=2;p<o;p++)s[p]=a[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},71513:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=a(87462),n=(a(67294),a(3905));const o={sidebar_position:7,tags:["quickstart"]},s="Overview of the SuperDuperDB datalayer",l={unversionedId:"docs/datalayer_overview",id:"docs/datalayer_overview",title:"Overview of the SuperDuperDB datalayer",description:"The abstraction coordinates models, data and backends is the superduperdb.base.datalayer.Datalayer class.",source:"@site/content/docs/07_datalayer_overview.md",sourceDirName:"docs",slug:"/docs/datalayer_overview",permalink:"/docs/docs/datalayer_overview",draft:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/tree/main/docs/content/docs/07_datalayer_overview.md",tags:[{label:"quickstart",permalink:"/docs/tags/quickstart"}],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,tags:["quickstart"]},sidebar:"tutorialSidebar",previous:{title:"Glossary of concepts and classes",permalink:"/docs/docs/glossary"},next:{title:"Datalayer functionality",permalink:"/docs/docs/datalayer_functionality"}},i={},p=[{value:"Data-backend",id:"data-backend",level:3},{value:"Artifact Store",id:"artifact-store",level:3},{value:"Metadata Store",id:"metadata-store",level:3},{value:"Default settings",id:"default-settings",level:2}],d={toc:p},c="wrapper";function u(e){let{components:t,...a}=e;return(0,n.kt)(c,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"overview-of-the-superduperdb-datalayer"},"Overview of the SuperDuperDB datalayer"),(0,n.kt)("p",null,"The abstraction coordinates models, data and backends is the ",(0,n.kt)("inlineCode",{parentName:"p"},"superduperdb.base.datalayer.Datalayer")," class."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Datalayer"),' is a highly configurable class which "wires together" three important\nbackends involved in the AI workflow:'),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Querying the database via the ",(0,n.kt)("strong",{parentName:"li"},"databackend")),(0,n.kt)("li",{parentName:"ul"},"Storing and retrieving serialized model-weights and other artifacts from the ",(0,n.kt)("strong",{parentName:"li"},"artifact store")),(0,n.kt)("li",{parentName:"ul"},"Storing and retrieval important meta-data, from the ",(0,n.kt)("strong",{parentName:"li"},"meta-data store")," and information about models and other\ncomponents which are to be installed with ",(0,n.kt)("inlineCode",{parentName:"li"},"superduperdb"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},">>> from superduperdb import superduper\n>>> db = superduper()\n>>> db.databackend\n<superduperdb.backends.mongodb.data_backend.MongoDataBackend at 0x1562815d0>\n>>> db.artifact_store\n<superduperdb.backends.mongodb.artifacts.MongoArtifactStore at 0x156869f50>\n>>> db.metadata\n<superduperdb.backends.mongodb.metadata.MongoMetaDataStore at 0x156866a10>\n")),(0,n.kt)("p",null,"Our aim is to make it easy to set-up each aspect of the ",(0,n.kt)("inlineCode",{parentName:"p"},"Datalayer")," with your preferred\ndatabases."),(0,n.kt)("h3",{id:"data-backend"},"Data-backend"),(0,n.kt)("p",null,"The databackend typically connects to your database (although ",(0,n.kt)("inlineCode",{parentName:"p"},"superduperdb")," also supports other databackends such as a directory of ",(0,n.kt)("inlineCode",{parentName:"p"},"pandas")," dataframes),\nand dispatches queries written in an query API which is compatible with that databackend, but which also includes additional aspects\nspecific to ",(0,n.kt)("inlineCode",{parentName:"p"},"superduperdb"),"."),(0,n.kt)("p",null,"Read more ",(0,n.kt)("a",{parentName:"p",href:"/docs/docs/supported_query_APIs"},"here"),"."),(0,n.kt)("p",null,"The databackend is configured by setting the URI ",(0,n.kt)("inlineCode",{parentName:"p"},"CFG.databackend")," in the ",(0,n.kt)("a",{parentName:"p",href:"/docs/docs/configuration"},"configuration system"),"."),(0,n.kt)("p",null,"We support the same databackends as supported by the ",(0,n.kt)("a",{parentName:"p",href:"https://ibis-project.org/"},(0,n.kt)("inlineCode",{parentName:"a"},"ibis")," project"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.mongodb.com/"},(0,n.kt)("strong",{parentName:"a"},"MongoDB"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.postgresql.org/"},(0,n.kt)("strong",{parentName:"a"},"PostgreSQL"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.sqlite.org/index.html"},(0,n.kt)("strong",{parentName:"a"},"SQLite"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://duckdb.org/"},(0,n.kt)("strong",{parentName:"a"},"DuckDB"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://cloud.google.com/bigquery"},(0,n.kt)("strong",{parentName:"a"},"BigQuery"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://clickhouse.com/"},(0,n.kt)("strong",{parentName:"a"},"ClickHouse"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://arrow.apache.org/datafusion/"},(0,n.kt)("strong",{parentName:"a"},"DataFusion"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://druid.apache.org/"},(0,n.kt)("strong",{parentName:"a"},"Druid"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://impala.apache.org/"},(0,n.kt)("strong",{parentName:"a"},"Impala"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.microsoft.com/en-us/sql-server/"},(0,n.kt)("strong",{parentName:"a"},"MSSQL"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.mysql.com/"},(0,n.kt)("strong",{parentName:"a"},"MySQL"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.oracle.com/database/"},(0,n.kt)("strong",{parentName:"a"},"Oracle"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pandas.pydata.org/"},(0,n.kt)("strong",{parentName:"a"},"pandas"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.pola.rs/"},(0,n.kt)("strong",{parentName:"a"},"Polars"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://spark.apache.org/docs/3.3.1/api/python/index.html"},(0,n.kt)("strong",{parentName:"a"},"PySpark"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.snowflake.com/en/"},(0,n.kt)("strong",{parentName:"a"},"Snowflake"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://trino.io/"},(0,n.kt)("strong",{parentName:"a"},"Trino")))),(0,n.kt)("h3",{id:"artifact-store"},"Artifact Store"),(0,n.kt)("p",null,"The artifact-store is the place where large pieces of data associated with your AI models are saved.\nUsers have the possibility to configure either a local filesystem, or an artifact store on MongoDB ",(0,n.kt)("inlineCode",{parentName:"p"},"gridfs"),":"),(0,n.kt)("p",null,"For example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"CFG.artifact_store = 'mongodb://localhost:27017/documents'\n")),(0,n.kt)("p",null,"Or:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"CFG.artifact_store = 'filesystem://./data'\n")),(0,n.kt)("h3",{id:"metadata-store"},"Metadata Store"),(0,n.kt)("p",null,"The meta-data store is the place where important information associated with models and\nrelated components are kept:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Where are the data artifacts saved for a component?"),(0,n.kt)("li",{parentName:"ul"},"Important parameters necessary for using a component"),(0,n.kt)("li",{parentName:"ul"},"Important parameters which were used to create a component (e.g. in training or otherwise)")),(0,n.kt)("p",null,"Similarly to the databackend and artifact store, the metadata store is configurable:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"CFG.metadata = 'mongodb://localhost:27017/documents'\n")),(0,n.kt)("p",null,"We support metadata store via:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://www.mongodb.com/"},"MongoDB")),(0,n.kt)("li",{parentName:"ol"},"All databases supported by ",(0,n.kt)("a",{parentName:"li",href:"https://www.sqlalchemy.org/"},"SQLAlchemy"),".\nFor example, these databases supported by the databackend are also supported by the metadata store.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.postgresql.org/"},"PostgreSQL")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.mysql.com/"},"MySQL")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.sqlite.org/"},"SQLite")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.microsoft.com/en-us/sql-server/sql-server-downloads"},"MSSQL"))))),(0,n.kt)("h2",{id:"default-settings"},"Default settings"),(0,n.kt)("p",null,"In such cases, the default configuration is to use the same configuration as used in the\ndatabackend."),(0,n.kt)("p",null,"I.e., for MongoDB the following are equivalent:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"db = superduper('mongodb://localhost:27018/documents')\n")),(0,n.kt)("p",null,"...and"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"db = superduper(\n    'mongodb://localhost:27018/documents',\n    metadata_store='mongodb://localhost:27018/documents',\n    artifact_store='mongodb://localhost:27018/documents',\n)\n")),(0,n.kt)("p",null,"Whenever a database is supported by the artifact store and metadata store,\nthe same behaviour holds. However, since there is no general pattern\nfor storing large files in SQL databases, the fallback artifact store\nis on the local filesystem. So the following are equivalent:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"db = superduper('sqlite://<my-database>.db')\n")),(0,n.kt)("p",null,"...and"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"db = superduper(\n    'sqlite://<my-database>.db',\n    metadata_store='sqlite://<my-database>.db',\n    artifact_store='filesystem://.superduperdb/artifacts/',\n)\n")))}u.isMDXComponent=!0}}]);