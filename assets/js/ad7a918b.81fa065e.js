"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[5219],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=s(n),m=a,f=l["".concat(p,".").concat(m)]||l[m]||d[m]||o;return n?r.createElement(f,c(c({ref:t},u),{},{components:n})):r.createElement(f,c({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[l]="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},92674:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:32},c="Setting up SuperDuperDB as a change-data-capture daemon",i={unversionedId:"docs/change_data_capture",id:"docs/change_data_capture",title:"Setting up SuperDuperDB as a change-data-capture daemon",description:"This functionality is currently for MongoDB only",source:"@site/content/docs/32_change_data_capture.md",sourceDirName:"docs",slug:"/docs/change_data_capture",permalink:"/docs/docs/change_data_capture",draft:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/tree/main/docs/content/docs/32_change_data_capture.md",tags:[],version:"current",sidebarPosition:32,frontMatter:{sidebar_position:32},sidebar:"tutorialSidebar",previous:{title:"Running non-blocking dask computations in the background",permalink:"/docs/docs/non_blocking_dask_jobs"},next:{title:"Vector-searcher service (coming soon)",permalink:"/docs/docs/vector_comparison_service"}},p={},s=[],u={toc:s},l="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"setting-up-superduperdb-as-a-change-data-capture-daemon"},"Setting up SuperDuperDB as a change-data-capture daemon"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This functionality is currently for MongoDB only")),(0,a.kt)("p",null,"Setting-up SuperDuperDB as a change-data-capture daemon, is a simple call:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"db.cdc.listen()\n")),(0,a.kt)("p",null,"... or"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"superduperdb cdc\n")),(0,a.kt)("p",null,"When ",(0,a.kt)("inlineCode",{parentName:"p"},"superduperdb")," is configured in this way, this daemon handles all inserts to\nSuperDuperDB, therefore, if ",(0,a.kt)("inlineCode",{parentName:"p"},"superduperdb")," is run in another process or service,\nit's important to configure the existence of the daemon:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from superduperdb import CFG\n\nCFG.cluster.cdc = True\n")),(0,a.kt)("p",null,"Now that the daemon is running, even when data is inserted using a different client, such as\nthe native ",(0,a.kt)("inlineCode",{parentName:"p"},"pymongo.MongoClient")," client, then ",(0,a.kt)("inlineCode",{parentName:"p"},"Listener")," outputs are still created on those inputs."))}d.isMDXComponent=!0}}]);