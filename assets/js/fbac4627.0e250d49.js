"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[3155],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},b=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(t),b=o,m=u["".concat(l,".").concat(b)]||u[b]||d[b]||a;return t?r.createElement(m,i(i({ref:n},s),{},{components:t})):r.createElement(m,i({ref:n},s))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=b;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}b.displayName="MDXCreateElement"},39499:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var r=t(87462),o=(t(67294),t(3905));const a={sidebar_position:31},i="Running non-blocking dask computations in the background",c={unversionedId:"docs/non_blocking_dask_jobs",id:"docs/non_blocking_dask_jobs",title:"Running non-blocking dask computations in the background",description:"superduperdb offers the possiblity to run all long running blocking jobs in the background via dask.",source:"@site/content/docs/31_non_blocking_dask_jobs.md",sourceDirName:"docs",slug:"/docs/non_blocking_dask_jobs",permalink:"/docs/docs/non_blocking_dask_jobs",draft:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/tree/main/docs/content/docs/31_non_blocking_dask_jobs.md",tags:[],version:"current",sidebarPosition:31,frontMatter:{sidebar_position:31},sidebar:"tutorialSidebar",previous:{title:"Command line interface",permalink:"/docs/docs/command_line_interface"},next:{title:"Setting up SuperDuperDB as a change-data-capture daemon",permalink:"/docs/docs/change_data_capture"}},l={},p=[],s={toc:p},u="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"running-non-blocking-dask-computations-in-the-background"},"Running non-blocking dask computations in the background"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"superduperdb")," offers the possiblity to run all long running blocking jobs in the background via ",(0,o.kt)("inlineCode",{parentName:"p"},"dask"),".\nRead about the ",(0,o.kt)("inlineCode",{parentName:"p"},"dask")," project ",(0,o.kt)("a",{parentName:"p",href:"https://www.dask.org/"},"here"),"."),(0,o.kt)("p",null,"To configure this feature, configure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from superduperdb import CFG\n\nCFG.production = True\n")),(0,o.kt)("p",null,"When this is so-configured the following functions push their computations to the ",(0,o.kt)("inlineCode",{parentName:"p"},"dask")," cluster:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"db.add")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"db.insert")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"db.update")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Model.predict")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Model.fit"))),(0,o.kt)("p",null,"When ",(0,o.kt)("inlineCode",{parentName:"p"},"dask")," is configured, these functions returns either a ",(0,o.kt)("inlineCode",{parentName:"p"},"superduperdb.job.Job")," object, or an iterable thereof."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"job = m.predict(     # a `superduper.job.ComponentJob` object\n    X='x',\n    db=db,\n    select=Collection('localcluster').find(),\n)\n\njob.watch()          # watch the `stdout` of the `Job`\n")))}d.isMDXComponent=!0}}]);