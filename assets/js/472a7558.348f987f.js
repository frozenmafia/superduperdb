"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[9251],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),l=s(r),m=o,f=l["".concat(p,".").concat(m)]||l[m]||u[m]||a;return r?n.createElement(f,i(i({ref:t},d),{},{components:r})):n.createElement(f,i({ref:t},d))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[l]="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6947:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var n=r(87462),o=(r(67294),r(3905));const a={sidebar_position:29},i="Developer vs. production mode",c={unversionedId:"docs/developer_vs_production_mode",id:"docs/developer_vs_production_mode",title:"Developer vs. production mode",description:"SuperDuperDB may be run in 2 modes:",source:"@site/content/docs/29_developer_vs_production_mode.md",sourceDirName:"docs",slug:"/docs/developer_vs_production_mode",permalink:"/docs/docs/developer_vs_production_mode",draft:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/tree/main/docs/content/docs/29_developer_vs_production_mode.md",tags:[],version:"current",sidebarPosition:29,frontMatter:{sidebar_position:29},sidebar:"tutorialSidebar",previous:{title:"Creating complex stacks of functionality",permalink:"/docs/docs/creating_stacks_of_functionality"},next:{title:"Command line interface",permalink:"/docs/docs/command_line_interface"}},p={},s=[],d={toc:s},l="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(l,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"developer-vs-production-mode"},"Developer vs. production mode"),(0,o.kt)("p",null,"SuperDuperDB may be run in 2 modes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Developer")," mode"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Production")," mode")),(0,o.kt)("p",null,"These may be configured with ",(0,o.kt)("inlineCode",{parentName:"p"},"superduperdb.CFG"),".\nBy default ",(0,o.kt)("inlineCode",{parentName:"p"},"superduperdb")," runs in developer mode.\nIn developer mode, all instructions run in the foreground,\nand calls to vector-search happen ",(0,o.kt)("em",{parentName:"p"},"in process"),"."),(0,o.kt)("p",null,"To set production mode, configure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from superduperdb import CFG\n\ns.CFG.production = True\n")),(0,o.kt)("p",null,"With production mode configured, the system assumes the existence of:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/non_blocking_dask_jobs"},"distributed ",(0,o.kt)("strong",{parentName:"a"},"Dask")," cluster"),", with scheduler and workers configured to work with ",(0,o.kt)("inlineCode",{parentName:"li"},"superduperdb")),(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/change_data_capture"},(0,o.kt)("strong",{parentName:"a"},"change-data-capture")," service")),(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/vector_comparison_service"},(0,o.kt)("strong",{parentName:"a"},"vector-search")," service"),", which finds similar vectors, given an input vector")))}u.isMDXComponent=!0}}]);