"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[5374],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),l=p(t),d=o,f=l["".concat(s,".").concat(d)]||l[d]||m[d]||i;return t?r.createElement(f,a(a({ref:n},u),{},{components:t})):r.createElement(f,a({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[l]="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},78101:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=t(87462),o=(t(67294),t(3905));const i={sidebar_position:5,tags:["quickstart"]},a="Minimum working example",c={unversionedId:"docs/minimum_working_example",id:"docs/minimum_working_example",title:"Minimum working example",description:"To check that everything is working correctly cut and paste this code into a Jupyter notebook.",source:"@site/content/docs/05_minimum_working_example.md",sourceDirName:"docs",slug:"/docs/minimum_working_example",permalink:"/docs/docs/minimum_working_example",draft:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/tree/main/docs/content/docs/05_minimum_working_example.md",tags:[{label:"quickstart",permalink:"/docs/tags/quickstart"}],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,tags:["quickstart"]},sidebar:"tutorialSidebar",previous:{title:"Connecting to your datastore",permalink:"/docs/docs/connecting"},next:{title:"Glossary of concepts and classes",permalink:"/docs/docs/glossary"}},s={},p=[],u={toc:p},l="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(l,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"minimum-working-example"},"Minimum working example"),(0,o.kt)("p",null,"To check that everything is working correctly cut and paste this code into a Jupyter notebook."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\nfrom mongomock import MongoClient\nfrom superduperdb.base.document import Document as D\nfrom superduperdb.components.model import Model\nfrom superduperdb.ext.numpy import array\nfrom superduperdb.backends.mongodb.query import Collection\nimport superduperdb as s\n\ndb = s.superduper(MongoClient().documents)\ncollection = Collection('docs')\n\na = array('float64', shape=(32,))\n\ndb.execute(\n    collection.insert_many([\n        D({'x': a(np.random.randn(32))})\n        for _ in range(100)\n    ]), encoders = (a,)\n)\n\nmodel = Model(\n    identifier='test-model',\n    object=lambda x: x + 1,\n    encoder=a,\n)\n\nmodel.predict(X='x', db=db, select=collection.find())\n\nprint(db.execute(collection.find_one()))\n")),(0,o.kt)("p",null,"If this doesn't work then something is wrong \ud83d\ude49 - please report ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/SuperDuperDB/superduperdb/issues"},"an issue on GitHub"),"."))}m.isMDXComponent=!0}}]);