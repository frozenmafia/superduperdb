"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Welcome to the SuperDuperDB Docs","href":"/docs/docs/intro","docId":"docs/intro"},{"type":"link","label":"Installation Guide","href":"/docs/docs/installation","docId":"docs/installation"},{"type":"link","label":"Configuring SuperDuperDB","href":"/docs/docs/configuration","docId":"docs/configuration"},{"type":"link","label":"Connecting to your datastore","href":"/docs/docs/connecting","docId":"docs/connecting"},{"type":"link","label":"Minimum working example","href":"/docs/docs/minimum_working_example","docId":"docs/minimum_working_example"},{"type":"link","label":"Glossary of concepts and classes","href":"/docs/docs/glossary","docId":"docs/glossary"},{"type":"link","label":"Overview of the SuperDuperDB datalayer","href":"/docs/docs/datalayer_overview","docId":"docs/datalayer_overview"},{"type":"link","label":"Datalayer functionality","href":"/docs/docs/datalayer_functionality","docId":"docs/datalayer_functionality"},{"type":"link","label":"The component abstraction","href":"/docs/docs/component_abstraction","docId":"docs/component_abstraction"},{"type":"link","label":"Document/ Encoder / Schema - superduperdb\'s mechanisms for specialized data.","href":"/docs/docs/document_encoder_abstraction","docId":"docs/document_encoder_abstraction"},{"type":"link","label":"Query API syntax and approach","href":"/docs/docs/supported_query_APIs","docId":"docs/supported_query_APIs"},{"type":"link","label":"MongoDB Query API","href":"/docs/docs/mongodb_query_API","docId":"docs/mongodb_query_API"},{"type":"link","label":"SQL Query API","href":"/docs/docs/sql_query_API","docId":"docs/sql_query_API"},{"type":"link","label":"Encoding images, audio, video and other special data","href":"/docs/docs/encoding_special_data_types","docId":"docs/encoding_special_data_types"},{"type":"link","label":"Working with external data sources","href":"/docs/docs/referring_to_data_from_diverse_sources","docId":"docs/referring_to_data_from_diverse_sources"},{"type":"link","label":"Working with and inserting large pieces of data","href":"/docs/docs/using_hybrid_storage_to_handle_large_data_blobs","docId":"docs/using_hybrid_storage_to_handle_large_data_blobs"},{"type":"link","label":"Interfacing with popular AI frameworks","href":"/docs/docs/supported_ai_frameworks","docId":"docs/supported_ai_frameworks"},{"type":"link","label":"AI Models via Model and descendants","href":"/docs/docs/ai_models","docId":"docs/ai_models"},{"type":"link","label":"Using AI APIs as Predictor descendants","href":"/docs/docs/ai_apis","docId":"docs/ai_apis"},{"type":"link","label":"Procedural vs. declarative API","href":"/docs/docs/procedural_vs_declarative_api","docId":"docs/procedural_vs_declarative_api"},{"type":"link","label":"Applying models and predictors to data","href":"/docs/docs/apply_models","docId":"docs/apply_models"},{"type":"link","label":"Daemonizing .predict with listeners","href":"/docs/docs/daemonizing_models_with_listeners","docId":"docs/daemonizing_models_with_listeners"},{"type":"link","label":"Training models directly on your datastore","href":"/docs/docs/training_models","docId":"docs/training_models"},{"type":"link","label":"Configuring models to ingest features from other models","href":"/docs/docs/linking_interdependent_models","docId":"docs/linking_interdependent_models"},{"type":"link","label":"Setting up and accessing vector-search","href":"/docs/docs/vector_search","docId":"docs/vector_search"},{"type":"link","label":"Component versioning","href":"/docs/docs/component_versioning","docId":"docs/component_versioning"},{"type":"link","label":"Serializing components with SuperDuperDB","href":"/docs/docs/serialization","docId":"docs/serialization"},{"type":"link","label":"Creating complex stacks of functionality","href":"/docs/docs/creating_stacks_of_functionality","docId":"docs/creating_stacks_of_functionality"},{"type":"link","label":"Developer vs. production mode","href":"/docs/docs/developer_vs_production_mode","docId":"docs/developer_vs_production_mode"},{"type":"link","label":"Command line interface","href":"/docs/docs/command_line_interface","docId":"docs/command_line_interface"},{"type":"link","label":"Running non-blocking dask computations in the background","href":"/docs/docs/non_blocking_dask_jobs","docId":"docs/non_blocking_dask_jobs"},{"type":"link","label":"Setting up SuperDuperDB as a change-data-capture daemon","href":"/docs/docs/change_data_capture","docId":"docs/change_data_capture"},{"type":"link","label":"Vector-searcher service (coming soon)","href":"/docs/docs/vector_comparison_service","docId":"docs/vector_comparison_service"}],"useCasesSidebar":[{"type":"category","label":"Use-cases","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chunked vector-search using multiple inputs per document","href":"/docs/use_cases/items/chunked_vector_search","docId":"use_cases/items/chunked_vector_search"},{"type":"link","label":"Training and Maintaining MNIST Predictions with SuperDuperDB","href":"/docs/use_cases/items/mnist_torch","docId":"use_cases/items/mnist_torch"},{"type":"link","label":"Multimodal Search Using CLIP","href":"/docs/use_cases/items/multimodal_image_search_clip","docId":"use_cases/items/multimodal_image_search_clip"},{"type":"link","label":"Building Q&A Assistant Using Mongo and OpenAI","href":"/docs/use_cases/items/question_the_docs","docId":"use_cases/items/question_the_docs"},{"type":"link","label":"Creating a DB of image features in torchvision","href":"/docs/use_cases/items/resnet_features","docId":"use_cases/items/resnet_features"},{"type":"link","label":"Sentiment analysis with transformers","href":"/docs/use_cases/items/sentiment_analysis_use_case","docId":"use_cases/items/sentiment_analysis_use_case"},{"type":"link","label":"End-2-end example using SQL databases","href":"/docs/use_cases/items/sql-example","docId":"use_cases/items/sql-example"},{"type":"link","label":"Transfer Learning with Sentence Transformers and Scikit-Learn","href":"/docs/use_cases/items/transfer_learning","docId":"use_cases/items/transfer_learning"},{"type":"link","label":"Vector-search with SuperDuperDB","href":"/docs/use_cases/items/vector_search","docId":"use_cases/items/vector_search"},{"type":"link","label":"Search within videos with text","href":"/docs/use_cases/items/video_search","docId":"use_cases/items/video_search"},{"type":"link","label":"Cataloguing voice-memos for a self managed personal assistant","href":"/docs/use_cases/items/voice_memos","docId":"use_cases/items/voice_memos"}],"href":"/docs/category/use-cases"}]},"docs":{"docs/ai_apis":{"id":"docs/ai_apis","title":"Using AI APIs as Predictor descendants","description":"In SuperDuperDB, developers are able to interact with popular AI API providers, in a way very similar to","sidebar":"tutorialSidebar"},"docs/ai_models":{"id":"docs/ai_models","title":"AI Models via Model and descendants","description":"AI models may be wrapped and used in superduperdb by the Model class and descendants.","sidebar":"tutorialSidebar"},"docs/apply_models":{"id":"docs/apply_models","title":"Applying models and predictors to data","description":"Model and Predictor instances may be applied directly to data in the database without first fetching the data client-side.","sidebar":"tutorialSidebar"},"docs/change_data_capture":{"id":"docs/change_data_capture","title":"Setting up SuperDuperDB as a change-data-capture daemon","description":"This functionality is currently for MongoDB only","sidebar":"tutorialSidebar"},"docs/command_line_interface":{"id":"docs/command_line_interface","title":"Command line interface","description":"Start change-data-capture (CDC)","sidebar":"tutorialSidebar"},"docs/component_abstraction":{"id":"docs/component_abstraction","title":"The component abstraction","description":"A Component is an object which is a combination of JSON-able parameters, and classes which are not","sidebar":"tutorialSidebar"},"docs/component_versioning":{"id":"docs/component_versioning","title":"Component versioning","description":"Whenever a Component is created (see here for overview of Component classes),","sidebar":"tutorialSidebar"},"docs/configuration":{"id":"docs/configuration","title":"Configuring SuperDuperDB","description":"The first step in SuperDuperDB is to configure a flexible range of options for setting","sidebar":"tutorialSidebar"},"docs/connecting":{"id":"docs/connecting","title":"Connecting to your datastore","description":"Now that you have configured superduperdb with either superduperdb.CFG or environment variables (see here),","sidebar":"tutorialSidebar"},"docs/creating_stacks_of_functionality":{"id":"docs/creating_stacks_of_functionality","title":"Creating complex stacks of functionality","description":"With the declarative API, it\'s possible to create multiple","sidebar":"tutorialSidebar"},"docs/daemonizing_models_with_listeners":{"id":"docs/daemonizing_models_with_listeners","title":"Daemonizing .predict with listeners","description":"In many AI applications, it\'s important that a catalogue of predictions is maintained for","sidebar":"tutorialSidebar"},"docs/datalayer_functionality":{"id":"docs/datalayer_functionality","title":"Datalayer functionality","description":"Once you have connected to your database with superduperdb (see here),","sidebar":"tutorialSidebar"},"docs/datalayer_overview":{"id":"docs/datalayer_overview","title":"Overview of the SuperDuperDB datalayer","description":"The abstraction coordinates models, data and backends is the superduperdb.base.datalayer.Datalayer class.","sidebar":"tutorialSidebar"},"docs/developer_vs_production_mode":{"id":"docs/developer_vs_production_mode","title":"Developer vs. production mode","description":"SuperDuperDB may be run in 2 modes:","sidebar":"tutorialSidebar"},"docs/document_encoder_abstraction":{"id":"docs/document_encoder_abstraction","title":"Document/ Encoder / Schema - superduperdb\'s mechanisms for specialized data.","description":"In AI, typical types of data are:","sidebar":"tutorialSidebar"},"docs/encoding_special_data_types":{"id":"docs/encoding_special_data_types","title":"Encoding images, audio, video and other special data","description":"Encoding data which is not supported by the underlying database, is supported in superduperdb with:","sidebar":"tutorialSidebar"},"docs/glossary":{"id":"docs/glossary","title":"Glossary of concepts and classes","description":"| Concept | Description |","sidebar":"tutorialSidebar"},"docs/installation":{"id":"docs/installation","title":"Installation Guide","description":"There are two ways to get started:","sidebar":"tutorialSidebar"},"docs/intro":{"id":"docs/intro","title":"Welcome to the SuperDuperDB Docs","description":"What is SuperDuperDB?","sidebar":"tutorialSidebar"},"docs/linking_interdependent_models":{"id":"docs/linking_interdependent_models","title":"Configuring models to ingest features from other models","description":"Sometimes the outputs of one model should be \\"chained together\\" to become inputs of another model.","sidebar":"tutorialSidebar"},"docs/minimum_working_example":{"id":"docs/minimum_working_example","title":"Minimum working example","description":"To check that everything is working correctly cut and paste this code into a Jupyter notebook.","sidebar":"tutorialSidebar"},"docs/mongodb_query_API":{"id":"docs/mongodb_query_API","title":"MongoDB Query API","description":"In general the MongoDB query API works exactly as pymongo, with the exception that:","sidebar":"tutorialSidebar"},"docs/non_blocking_dask_jobs":{"id":"docs/non_blocking_dask_jobs","title":"Running non-blocking dask computations in the background","description":"superduperdb offers the possiblity to run all long running blocking jobs in the background via dask.","sidebar":"tutorialSidebar"},"docs/procedural_vs_declarative_api":{"id":"docs/procedural_vs_declarative_api","title":"Procedural vs. declarative API","description":"superduperdb provides 2 principle approaches for applying AI to the database","sidebar":"tutorialSidebar"},"docs/referring_to_data_from_diverse_sources":{"id":"docs/referring_to_data_from_diverse_sources","title":"Working with external data sources","description":"Using the MongoDB query API, superduperdb supports data added from external data-sources.","sidebar":"tutorialSidebar"},"docs/serialization":{"id":"docs/serialization","title":"Serializing components with SuperDuperDB","description":"When adding a component to SuperDuperDB,","sidebar":"tutorialSidebar"},"docs/sql_query_API":{"id":"docs/sql_query_API","title":"SQL Query API","description":"Setup","sidebar":"tutorialSidebar"},"docs/supported_ai_frameworks":{"id":"docs/supported_ai_frameworks","title":"Interfacing with popular AI frameworks","description":"The primary way in which developers will integrate and implement functionality from popular AI frameworks, is via","sidebar":"tutorialSidebar"},"docs/supported_query_APIs":{"id":"docs/supported_query_APIs","title":"Query API syntax and approach","description":"In order to specify the action of models on the data, we provide an interface to pythonic ecosystem query APIs.","sidebar":"tutorialSidebar"},"docs/training_models":{"id":"docs/training_models","title":"Training models directly on your datastore","description":"Similarly to applying models to create predictions, training models is possible both procedurally and declaratively in superduperdb.","sidebar":"tutorialSidebar"},"docs/using_hybrid_storage_to_handle_large_data_blobs":{"id":"docs/using_hybrid_storage_to_handle_large_data_blobs","title":"Working with and inserting large pieces of data","description":"Some applications require large data-blobs and objects, which are larger than the objects which are supported by the underlying database.","sidebar":"tutorialSidebar"},"docs/vector_comparison_service":{"id":"docs/vector_comparison_service","title":"Vector-searcher service (coming soon)","description":"The vector-comparison service is a standalone,","sidebar":"tutorialSidebar"},"docs/vector_search":{"id":"docs/vector_search","title":"Setting up and accessing vector-search","description":"Vector-search refers to the task of searching through vectors","sidebar":"tutorialSidebar"},"use_cases/items/chunked_vector_search":{"id":"use_cases/items/chunked_vector_search","title":"Chunked vector-search using multiple inputs per document","description":"In this example, we demonstrate how to implement vector-search, where the targets of search are envisaged","sidebar":"useCasesSidebar"},"use_cases/items/mnist_torch":{"id":"use_cases/items/mnist_torch","title":"Training and Maintaining MNIST Predictions with SuperDuperDB","description":"Introduction","sidebar":"useCasesSidebar"},"use_cases/items/multimodal_image_search_clip":{"id":"use_cases/items/multimodal_image_search_clip","title":"Multimodal Search Using CLIP","description":"Introduction","sidebar":"useCasesSidebar"},"use_cases/items/question_the_docs":{"id":"use_cases/items/question_the_docs","title":"Building Q&A Assistant Using Mongo and OpenAI","description":"Introduction","sidebar":"useCasesSidebar"},"use_cases/items/resnet_features":{"id":"use_cases/items/resnet_features","title":"Creating a DB of image features in torchvision","description":"In this use-case, we demonstrate how to use a pre-trained network from torchvision to generate","sidebar":"useCasesSidebar"},"use_cases/items/sentiment_analysis_use_case":{"id":"use_cases/items/sentiment_analysis_use_case","title":"Sentiment analysis with transformers","description":"In this notebook we implement a classic NLP use-case using Hugging Face\'s transformers library.","sidebar":"useCasesSidebar"},"use_cases/items/sql-example":{"id":"use_cases/items/sql-example","title":"End-2-end example using SQL databases","description":"SuperDuperDB allows users to connect to a MongoDB database, or any one of a range of SQL databases, i.e. from this selection:","sidebar":"useCasesSidebar"},"use_cases/items/transfer_learning":{"id":"use_cases/items/transfer_learning","title":"Transfer Learning with Sentence Transformers and Scikit-Learn","description":"Introduction","sidebar":"useCasesSidebar"},"use_cases/items/vector_search":{"id":"use_cases/items/vector_search","title":"Vector-search with SuperDuperDB","description":"Introduction","sidebar":"useCasesSidebar"},"use_cases/items/video_search":{"id":"use_cases/items/video_search","title":"Search within videos with text","description":"Introduction","sidebar":"useCasesSidebar"},"use_cases/items/voice_memos":{"id":"use_cases/items/voice_memos","title":"Cataloguing voice-memos for a self managed personal assistant","description":"Introduction","sidebar":"useCasesSidebar"}}}')}}]);